<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://code.alibabatech.com/schema/dubbo
http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <context:property-placeholder location="classpath:config.properties"/>
    <context:component-scan base-package="rml.service"/>

    <!--<import resource="dubbo.xml"/>-->
    <!-- 提供方应用名称信息，这个相当于起一个名字，我们dubbo管理页面比较清晰是哪个应用暴露出来的 -->
    <dubbo:application name="dubbo_provider"></dubbo:application>
    <!-- 使用zookeeper注册中心暴露服务地址 -->
    <!--如果需要注册,将register='false'改成register='',也就是将false去掉,这里默认加上false,因为没有开启dubbo服务-->
    <dubbo:registry address="zookeeper://127.0.0.1:2181" check="false" subscribe="false" register="false"></dubbo:registry>
    <!-- 要暴露的服务接口 -->
    <dubbo:service interface="rml.service.RegistryService" ref="registryService"/>
    <!-- 说明：
     dubbo:registry 标签一些属性的说明：
         1）register是否向此注册中心注册服务，如果设为false，将只订阅，不注册。
         2）check注册中心不存在时，是否报错。
         3）subscribe是否向此注册中心订阅服务，如果设为false，将只注册，不订阅。
         4）timeout注册中心请求超时时间(毫秒)。
         5）address可以Zookeeper集群配置，地址可以多个以逗号隔开等。
     dubbo:service标签的一些属性说明：
         1）interface服务接口的路径
         2）ref引用对应的实现类的Bean的ID
         3）registry向指定注册中心注册，在多个注册中心时使用，值为<dubbo:registry>的id属性，多个注册中心ID用逗号分隔，如果不想将该服务注册到任何registry，可将值设为N/A
         4）register 默认true ，该协议的服务是否注册到注册中心。
     -->
</beans>